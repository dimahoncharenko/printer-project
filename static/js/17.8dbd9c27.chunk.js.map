{"version":3,"sources":["components/Players/Cleaning.tsx","components/PlayerControls.tsx","components/Bookmark.tsx","components/Player.tsx"],"names":["Cleaning","title","url","fragment","CSS","css","PlayerControls","ref","togglePlay","isPlaying","muted","volume","toggleMute","setVolume","duration","played","onChange","onMouseDown","onMouseUp","displayTime","onMouseOver","rewindPlayer","forwardPlayer","toggleFullScreen","changeRate","playbackRate","className","onClick","id","type","min","max","value","onTouchStart","onTouchEnd","map","rate","index","key","bind","toFixed","forwardRef","Bookmark","display","seekTo","img","src","alt","count","Player","useState","playing","seeking","bookmarks","state","setState","playerRef","useRef","playerWrapperRef","canvasRef","controlsRef","useEffect","useCallback","target","style","setProperty","onProgress","currentState","current","range","querySelector","opacity","playedSeconds","currentTarget","format","secs","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","toString","padStart","ss","getUTCSeconds","getCurrentTime","screenfull","isEnabled","toggle","getDuration","currentTime","formatedDuration","formatedCurrentTime","width","height","config","file","attributes","crossOrigin","position","overflow","mark","item","backgroundColor"],"mappings":"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","file":"static/js/17.8dbd9c27.chunk.js","sourcesContent":["import Player from \"../Player\";\r\n\r\nconst Cleaning = () => {\r\n    return <Player title=\"Чистка друкуючої головки\" url=\"cleaning.mp4\" />\r\n};\r\n\r\nexport default Cleaning;","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { MouseEventHandler, ChangeEventHandler, forwardRef, ForwardedRef, Fragment } from \"react\";\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport { HiPause, HiPlay, HiRewind, HiFastForward } from \"react-icons/hi\";\r\nimport { FiVolume1, FiVolume2, FiVolumeX } from \"react-icons/fi\";\r\nimport { AiOutlineFullscreen } from \"react-icons/ai\";\r\nimport { IoSettingsOutline } from \"react-icons/io5\"; \r\n\r\nconst fragment = `\r\nposition: relative;\r\n-webkit-appearance: none;\r\ncursor: pointer;\r\nheight: .5em;\r\nborder-radius: var(--radius); \r\n\r\n&::-webkit-slider-thumb\r\n{\r\n    position: relative;\r\n    z-index: 2;\r\n    -webkit-appearance: none;\r\n    height: var(--thumb-size);\r\n    width: var(--thumb-size);\r\n    background-color: var(--thumb-color);\r\n    padding: 0;\r\n    border-radius: 50%;\r\n    transform: translateX(0em);\r\n\r\n    &:hover\r\n    {\r\n        box-shadow: 0em 0em .1em #090909, 0em 0em .1em #0d0d0d;\r\n    }\r\n}\r\n\r\n&::before\r\n{\r\n    position: absolute;\r\n    content: \" \";\r\n    height: 100%;\r\n    width: var(--before-width);\r\n    background-color: var(--before-color);\r\n    border-top-left-radius: var(--radius);\r\n    border-bottom-left-radius: var(--radius);\r\n}\r\n`;\r\n\r\nconst CSS = css`\r\n    --thumb-size: 1em;\r\n    --before-width: 0%;\r\n    --thumb-color: gray;\r\n    --before-color: darkgray;\r\n    --radius: .2em;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    background-color: rgba(0,0,0, .4);\r\n    transition: opacity .3s linear;\r\n\r\n    button\r\n    {\r\n        border: 0;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n        color: white;\r\n    }\r\n\r\n    > .player-controls__top\r\n    {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 1em;\r\n\r\n        > .heading  \r\n        {\r\n            color: white;\r\n            margin: 0;  \r\n            font-size: 1rem;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 1.5rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    > .player-controls__middle\r\n    {\r\n        display: flex;\r\n        justify-content: center;\r\n\r\n        > .toggle-play\r\n        {\r\n            font-size: 2.5rem;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 5rem;\r\n            }\r\n        }\r\n\r\n        > .rewind,\r\n        > .forward\r\n        {\r\n            font-size: 2rem;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 4rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    > .player-controls__bottom\r\n    {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        > .toggle-play\r\n        {\r\n            font-size: 1.5rem;\r\n            padding: 0;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 2rem;\r\n            }\r\n        }\r\n\r\n        > .volume-range\r\n        {   \r\n            --before-width: 50%;\r\n            width: 20%;\r\n            ${fragment}\r\n        }\r\n\r\n        > .rewind,\r\n        > .forward,\r\n        > .toggle-mute,\r\n        > .fullscreen\r\n        {\r\n            font-size: 1rem;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 1.5rem;\r\n            }\r\n        }\r\n\r\n        > .fullscreen\r\n        {\r\n            position: relative;\r\n            width: 30px;\r\n            height: 100%;\r\n\r\n            > svg\r\n            {\r\n                position: absolute;\r\n                top: 22%;\r\n                left: .25em;\r\n\r\n                @media (min-width: 600px) {\r\n                    left: -.25em;\r\n                }\r\n            }\r\n        }\r\n\r\n        > .seekbar\r\n        {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            align-items: center;\r\n            width: 100%;\r\n            height: 100%;\r\n\r\n            > .seekbar__range\r\n            {\r\n                width: min(70%, 50em);  \r\n                ${fragment}\r\n            }\r\n\r\n            > .seekbar__display-time\r\n            {\r\n                color: white;\r\n                font-size: .6rem;\r\n                margin-left: -1em;\r\n\r\n                @media (min-width: 600px) {\r\n                    font-size: 1rem;\r\n                }\r\n            }\r\n        }\r\n\r\n        > .playback-rate\r\n        {\r\n            position: relative;\r\n            font-size: 1.1rem;\r\n            margin-left: -1.8em;\r\n            margin-bottom: -.4em;\r\n\r\n            > .playback-rate__options\r\n            {\r\n                display: none;\r\n                position: absolute;\r\n                bottom: 1.5em;\r\n                left: calc(50% - 1em);\r\n                background-color: white;\r\n                border-radius: .3em;\r\n                overflow: hidden;\r\n\r\n                > div\r\n                {\r\n                    color: black;\r\n                    padding: .5em;\r\n                    font-size: clamp(.7rem, 2vw + .1em, 1rem);\r\n\r\n                    &::nth-of-type(1), \r\n                    &::nth-of-type(4) \r\n                    {\r\n                        border-radius: .3em;\r\n                    }\r\n\r\n                    &:hover,\r\n                    &.active\r\n                    {\r\n                        background-color: hsla(0, 0%, 0%, .2);\r\n                    }\r\n                }\r\n            }\r\n\r\n            &:focus\r\n            {\r\n                > svg\r\n                {\r\n                    transform: rotate(45deg);\r\n                    transition: transform .3s linear;\r\n                }\r\n\r\n                > .playback-rate__options\r\n                {\r\n                    display: block;\r\n\r\n                }\r\n            } \r\n        }\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    togglePlay: MouseEventHandler<HTMLButtonElement>\r\n    isPlaying: boolean\r\n    muted: boolean\r\n    volume: number\r\n    toggleMute: MouseEventHandler<HTMLButtonElement>\r\n    setVolume: ChangeEventHandler<HTMLInputElement>\r\n    duration: number\r\n    played: number\r\n    onChange: ChangeEventHandler<HTMLInputElement>\r\n    onMouseDown: () => any\r\n    onMouseUp: (arg: any) => any\r\n    displayTime: string\r\n    title: string\r\n    onMouseOver: MouseEventHandler<HTMLDivElement>\r\n    rewindPlayer: MouseEventHandler<HTMLButtonElement>\r\n    forwardPlayer: MouseEventHandler<HTMLButtonElement>\r\n    toggleFullScreen: MouseEventHandler<HTMLButtonElement>\r\n    changeRate: (rate: number) => any\r\n    playbackRate: number\r\n}\r\n\r\nconst PlayerControls = ({ \r\n        togglePlay, isPlaying, muted, volume, toggleMute, setVolume, duration, played, onChange, onMouseDown, \r\n        onMouseUp, displayTime, title, onMouseOver, rewindPlayer, forwardPlayer, toggleFullScreen, changeRate,\r\n        playbackRate\r\n    }: Props, ref: ForwardedRef<HTMLDivElement>) => {\r\n    return <Fragment>\r\n        <div \r\n            css={CSS} \r\n            ref={ref} \r\n            className=\"player-controls\"\r\n            onMouseOver={onMouseOver}\r\n        >\r\n            <div className=\"player-controls__top\">\r\n                <h2 className=\"heading\">{title}</h2>\r\n            </div>\r\n            <div className=\"player-controls__middle\">\r\n                <button className=\"rewind\" onClick={rewindPlayer}>\r\n                    <HiRewind/>\r\n                </button>\r\n\r\n                <button className=\"toggle-play\" onClick={togglePlay}>        \r\n                    {isPlaying ? <HiPause/> : <HiPlay/>}\r\n                </button>\r\n\r\n                <button className=\"forward\" onClick={forwardPlayer}>\r\n                    <HiFastForward/>\r\n                </button>\r\n            </div>\r\n            <div className=\"player-controls__bottom\">\r\n                <button className=\"rewind\" onClick={rewindPlayer}>\r\n                    <HiRewind/>\r\n                </button>\r\n\r\n                <button className=\"toggle-play\" onClick={togglePlay}>        \r\n                    {isPlaying ? <HiPause/> : <HiPlay/>}\r\n                </button>\r\n\r\n                <button className=\"forward\" onClick={forwardPlayer}>\r\n                    <HiFastForward/>\r\n                </button>\r\n\r\n                <button className=\"toggle-mute\" onClick={toggleMute}>\r\n                    {muted ? <FiVolumeX/> : volume > 0.5 ? <FiVolume2/> : <FiVolume1/>}\r\n                </button>\r\n\r\n                <input \r\n                    className=\"volume-range\"\r\n                    id=\"volume-range\"\r\n                    type=\"range\" \r\n                    min={0} \r\n                    max={100} \r\n                    value={volume * 100}\r\n                    onChange={setVolume}\r\n                />\r\n\r\n                <div className=\"seekbar\">\r\n                    <input\r\n                        className=\"seekbar__range\"\r\n                        type=\"range\"    \r\n                        min={0}\r\n                        max={duration}\r\n                        value={played}\r\n                        onChange={onChange}\r\n                        onMouseDown={onMouseDown}\r\n                        onTouchStart={onMouseDown}\r\n                        onTouchEnd={onMouseUp}\r\n                        onMouseUp={onMouseUp}\r\n                    />\r\n                    <span className=\"seekbar__display-time\">{displayTime}</span>\r\n                </div>\r\n\r\n                <button className=\"playback-rate active\">\r\n                    <IoSettingsOutline/>\r\n                    <div className=\"playback-rate__options\">\r\n                        {[2.0, 1.5, 1.0, 0.5].map((rate, index) => {\r\n                            return <div \r\n                                key={index} \r\n                                className={`${rate === playbackRate ? \"active\" : \"\"}`}\r\n                                onClick={changeRate.bind(null, rate)}\r\n                            >\r\n                                {rate.toFixed(1)}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </button>\r\n\r\n                <button className=\"fullscreen\" onClick={toggleFullScreen}>\r\n                    <AiOutlineFullscreen/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n};\r\n\r\nexport default forwardRef(PlayerControls);","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { MouseEventHandler } from \"react\";\r\nimport { jsx, css } from \"@emotion/react\";\r\n\r\nconst CSS = css`\r\n    width: 175px;\r\n    padding: .37em;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    > img\r\n    {\r\n        width: 100%;\r\n    }\r\n\r\n    > span\r\n    {\r\n        position: absolute;\r\n        bottom: 1em;\r\n        left: calc(50% - 20px);\r\n        color: white;\r\n        text-shadow: .1em .1em .2em gray;\r\n    }\r\n`;\r\n\r\nexport type TBookmark = {\r\n    img: string\r\n    display: string\r\n    currentTime: number\r\n}\r\n\r\ntype Props = {\r\n    display: string\r\n    seekTo: MouseEventHandler<HTMLDivElement>\r\n    img: string\r\n}\r\n\r\nconst Bookmark = ({ display, seekTo, img }: Props) => {\r\n    return <div css={CSS} className=\"bookmark\" onClick={seekTo}>\r\n        <img src={img} alt=\"\"/>\r\n        <span>{display}</span>\r\n    </div>\r\n};\r\n\r\nexport default Bookmark;","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useState, useCallback, useRef, ChangeEvent, MouseEvent, useEffect } from \"react\";\r\nimport ReactPlayer, { ReactPlayerProps } from \"react-player/lazy\";\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport screenfull from \"screenfull\";\r\n\r\nimport PlayerControls from \"./PlayerControls\";\r\nimport Bookmark, { TBookmark } from \"./Bookmark\";\r\n\r\nconst CSS = css`\r\n    position: relative;\r\n`;\r\n\r\ntype State = {\r\n    playing: boolean\r\n    volume: number\r\n    muted: boolean\r\n    played: number\r\n    seeking: boolean\r\n    bookmarks: TBookmark[]\r\n    rate: number\r\n}\r\n\r\ntype Props = {\r\n    title: string\r\n    url: string\r\n}\r\n\r\nlet count = 0;\r\n\r\nconst Player = ({\r\n    title,\r\n    url\r\n}: Props) => {\r\n    const [state, setState] = useState<State>({\r\n        playing: false,\r\n        volume: 0.5,\r\n        muted: false,\r\n        played: 0,\r\n        seeking: false,\r\n        bookmarks: [],\r\n        rate: 1.0\r\n    });\r\n\r\n    const playerRef = useRef<ReactPlayer>(null); \r\n    const playerWrapperRef = useRef<HTMLDivElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const controlsRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    const togglePlay = useCallback(() => {\r\n        setState(state => ({ ...state, playing: !state.playing}))\r\n    }, []);\r\n\r\n    const toggleMute = useCallback(() => {\r\n        setState(state => ({ ...state, muted: !state.muted }));\r\n    }, []);\r\n\r\n    const setVolume = useCallback(({ target }: ChangeEvent<HTMLInputElement>) => {\r\n        target.style.setProperty(\"--before-width\", `${(+target.value / +target.max) * 100}%`);\r\n        setState(state => ({ ...state, volume: (+target.value / 100), muted: +target.value === 0 }));\r\n    }, []);\r\n\r\n    const onProgress = useCallback((currentState: ReactPlayerProps) => {\r\n        if (controlsRef.current) {\r\n            const range = controlsRef.current.querySelector<HTMLInputElement>(\".seekbar__range\");\r\n\r\n            if (range) {\r\n                range.style.setProperty(\"--before-width\", `${currentState.played * 100}%`);\r\n            }\r\n        }\r\n\r\n        if (count > 3 && controlsRef.current) {\r\n            controlsRef.current.style.opacity = \"0\";\r\n            count = 0;\r\n        }\r\n\r\n        if (controlsRef.current && controlsRef.current.style.opacity === \"1\") count += 1; \r\n\r\n        if (!state.seeking) {\r\n            setState(state => ({ ...state, played: currentState.playedSeconds }))\r\n        }\r\n    }, [state.seeking]);\r\n\r\n    const onMouseDown = useCallback(() => {\r\n        setState(state => ({ ...state, seeking: true }));\r\n    }, []);\r\n\r\n    const onChange = useCallback(({ target }: ChangeEvent<HTMLInputElement>) => {\r\n        target.style.setProperty(\"--before-width\", `${(+target.value / +target.max) * 100}%`);\r\n        setState(state => ({ ...state, played: +target.value }));\r\n    }, []); \r\n\r\n    const onMouseUp = useCallback(({ currentTarget }: MouseEvent<HTMLInputElement>) => {\r\n        if (playerRef.current) {\r\n            setState(state => ({ ...state, seeking: false }));\r\n            playerRef.current.seekTo(+currentTarget.value);\r\n        }\r\n    }, []);\r\n\r\n    const format = useCallback((secs: number) => {\r\n        if (isNaN(secs)) return \"00:00\";\r\n\r\n        const date = new Date(secs * 1000);\r\n        const hh = date.getUTCHours();\r\n        const mm = date.getUTCMinutes().toString().padStart(2, \"0\");\r\n        const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n\r\n        if (!hh) return `${mm}:${ss}`;\r\n        return `${hh}:${mm}:${ss}`;\r\n    }, []); \r\n\r\n    const onMouseOver = useCallback(() => {\r\n        if (controlsRef.current) {\r\n            controlsRef.current.style.opacity = \"1\";\r\n            count = 0;\r\n        }\r\n    }, []);\r\n\r\n    const rewindPlayer = useCallback(() => {\r\n        if (playerRef.current) {\r\n            playerRef.current.seekTo(playerRef.current.getCurrentTime() - 10);\r\n        }\r\n    }, []);\r\n\r\n    const forwardPlayer = useCallback(() => {\r\n        if (playerRef.current) {\r\n            playerRef.current.seekTo(playerRef.current.getCurrentTime() + 10);\r\n        }\r\n    }, []);\r\n\r\n    const toggleFullScreen = useCallback(() => {\r\n        if (screenfull.isEnabled && playerWrapperRef.current) {\r\n            screenfull.toggle(playerWrapperRef.current);\r\n        }\r\n    }, []);\r\n\r\n    const changeRate = useCallback((rate: number) => {\r\n        setState(state => ({ ...state, rate }));\r\n    }, []);\r\n\r\n    \r\n    const duration = playerRef.current ? playerRef.current.getDuration() : 0;\r\n    const currentTime = playerRef.current ? playerRef.current.getCurrentTime() : 0;\r\n\r\n    const formatedDuration = format(duration);\r\n    const formatedCurrentTime = format(currentTime);\r\n\r\n    return <div className=\"player wow animate__animated animate__backInUp\" ref={playerWrapperRef} css={CSS}>\r\n        <ReactPlayer \r\n            url={url}\r\n            ref={playerRef}\r\n            width=\"100%\"\r\n            playbackRate={state.rate}\r\n            height=\"100%\"\r\n            playing={state.playing}\r\n            volume={state.volume}\r\n            muted={state.muted}\r\n            onProgress={onProgress}\r\n            config={{\r\n                file: {\r\n                    attributes: {\r\n                        crossOrigin: \"anonymous\"\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n\r\n        <PlayerControls \r\n            ref={controlsRef}\r\n            togglePlay={togglePlay} \r\n            isPlaying={state.playing}\r\n            muted={state.muted}\r\n            volume={state.volume}\r\n            toggleMute={toggleMute}\r\n            setVolume={setVolume}\r\n            duration={duration}\r\n            played={state.played}\r\n            onChange={onChange}\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            displayTime={`${formatedCurrentTime}/${formatedDuration}`}\r\n            title={title}\r\n            onMouseOver={onMouseOver}\r\n            rewindPlayer={rewindPlayer}\r\n            forwardPlayer={forwardPlayer}\r\n            toggleFullScreen={toggleFullScreen}\r\n            changeRate={changeRate}\r\n            playbackRate={state.rate}\r\n        />\r\n\r\n        <div style={{display: \"flex\", position: \"absolute\", overflow: \"hidden\", width: \"100%\"}}>\r\n            {state.bookmarks.map((mark, item) => {\r\n                return <Bookmark\r\n                    key={item}\r\n                    img={mark.img}\r\n                    display={mark.display}\r\n                    seekTo={() => playerRef.current ? playerRef.current.seekTo(mark.currentTime) : null}\r\n                />\r\n            })}\r\n        </div>\r\n\r\n        <canvas ref={canvasRef} style={{position: \"absolute\", backgroundColor: \"transparent\"}} />\r\n    </div>\r\n};\r\n\r\nexport default Player;"],"sourceRoot":""}