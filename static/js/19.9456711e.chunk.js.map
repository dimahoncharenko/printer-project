{"version":3,"sources":["components/Players/Testing.tsx","components/PlayerControls.tsx","components/Bookmark.tsx","components/Player.tsx"],"names":["Testing","title","url","CSS","css","PlayerControls","ref","togglePlay","isPlaying","muted","volume","toggleMute","setVolume","duration","played","onChange","onMouseDown","onMouseUp","displayTime","onMouseOver","rewindPlayer","forwardPlayer","toggleFullScreen","className","onClick","id","type","min","max","value","forwardRef","Bookmark","display","seekTo","img","src","alt","count","Player","useState","playing","seeking","bookmarks","state","setState","playerRef","useRef","playerWrapperRef","canvasRef","controlsRef","useCallback","target","onProgress","currentState","current","style","opacity","playedSeconds","currentTarget","format","secs","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","toString","padStart","ss","getUTCSeconds","getCurrentTime","screenfull","isEnabled","toggle","getDuration","currentTime","formatedDuration","formatedCurrentTime","width","height","config","file","attributes","crossOrigin","position","overflow","map","mark","item","key","backgroundColor"],"mappings":"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","file":"static/js/19.9456711e.chunk.js","sourcesContent":["import Player from \"../Player\";\r\n\r\nconst Testing = () => {\r\n    return <Player title=\"Тестування L3256 та M2140\" url=\"test.mp4\" />\r\n};\r\n\r\nexport default Testing;","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { MouseEventHandler, ChangeEventHandler, forwardRef, ForwardedRef, Fragment } from \"react\";\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport { HiPause, HiPlay, HiRewind, HiFastForward } from \"react-icons/hi\";\r\nimport { FiVolume1, FiVolume2, FiVolumeX } from \"react-icons/fi\";\r\nimport { AiOutlineFullscreen } from \"react-icons/ai\";\r\n\r\nconst CSS = css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    background-color: rgba(0,0,0, .4);\r\n    transition: opacity .3s linear;\r\n\r\n    button\r\n    {\r\n        border: 0;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n        color: white;\r\n    }\r\n\r\n    > .player-controls__top\r\n    {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 1em;\r\n\r\n        > .heading  \r\n        {\r\n            color: white;\r\n            margin: 0;  \r\n            font-size: 1rem;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 1.5rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    > .player-controls__middle\r\n    {\r\n        display: flex;\r\n        justify-content: center;\r\n\r\n        > .toggle-play\r\n        {\r\n            font-size: 2.5rem;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 5rem;\r\n            }\r\n        }\r\n\r\n        > .rewind,\r\n        > .forward\r\n        {\r\n            font-size: 2rem;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 4rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    > .player-controls__bottom\r\n    {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        > .toggle-play\r\n        {\r\n            font-size: 1.5rem;\r\n            padding: 0;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 2rem;\r\n            }\r\n        }\r\n\r\n        > .volume-range\r\n        {\r\n            cursor: pointer;\r\n            width: 20%;\r\n        }\r\n\r\n        > .rewind,\r\n        > .forward,\r\n        > .toggle-mute,\r\n        > .fullscreen\r\n        {\r\n            font-size: 1rem;\r\n\r\n            @media (min-width: 600px) {\r\n                font-size: 1.5rem;\r\n            }\r\n        }\r\n\r\n        > .fullscreen\r\n        {\r\n            position: relative;\r\n            width: 30px;\r\n            height: 100%;\r\n\r\n            > svg\r\n            {\r\n                position: absolute;\r\n                top: 22%;\r\n                left: .25em;\r\n\r\n                @media (min-width: 600px) {\r\n                    left: -.25em;\r\n                }\r\n            }\r\n        }\r\n\r\n        > .seekbar\r\n        {\r\n            display: flex;\r\n            justify-content: space-around;\r\n            align-items: center;\r\n            width: 100%;\r\n            height: 100%;\r\n\r\n            > .seekbar__range\r\n            {\r\n                width: 80%;\r\n                cursor: pointer;\r\n            }\r\n\r\n            > .seekbar__display-time\r\n            {\r\n                color: white;\r\n                font-size: .6rem;\r\n\r\n                @media (min-width: 600px) {\r\n                    font-size: 1rem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    togglePlay: MouseEventHandler<HTMLButtonElement>\r\n    isPlaying: boolean\r\n    muted: boolean\r\n    volume: number\r\n    toggleMute: MouseEventHandler<HTMLButtonElement>\r\n    setVolume: ChangeEventHandler<HTMLInputElement>\r\n    duration: number\r\n    played: number\r\n    onChange: ChangeEventHandler<HTMLInputElement>\r\n    onMouseDown: MouseEventHandler<HTMLInputElement>\r\n    onMouseUp: MouseEventHandler<HTMLInputElement>\r\n    displayTime: string\r\n    title: string\r\n    onMouseOver: MouseEventHandler<HTMLDivElement>\r\n    rewindPlayer: MouseEventHandler<HTMLButtonElement>\r\n    forwardPlayer: MouseEventHandler<HTMLButtonElement>\r\n    toggleFullScreen: MouseEventHandler<HTMLButtonElement>\r\n}\r\n\r\nconst PlayerControls = ({ \r\n        togglePlay, isPlaying, muted, volume, toggleMute, setVolume, duration, played, onChange, onMouseDown, \r\n        onMouseUp, displayTime, title, onMouseOver, rewindPlayer, forwardPlayer, toggleFullScreen\r\n    }: Props, ref: ForwardedRef<HTMLDivElement>) => {\r\n    return <Fragment>\r\n        <div \r\n            css={CSS} \r\n            ref={ref} \r\n            className=\"player-controls\"\r\n            onMouseOver={onMouseOver}\r\n        >\r\n            <div className=\"player-controls__top\">\r\n                <h2 className=\"heading\">{title}</h2>\r\n            </div>\r\n            <div className=\"player-controls__middle\">\r\n                <button className=\"rewind\" onClick={rewindPlayer}>\r\n                    <HiRewind/>\r\n                </button>\r\n\r\n                <button className=\"toggle-play\" onClick={togglePlay}>        \r\n                    {isPlaying ? <HiPause/> : <HiPlay/>}\r\n                </button>\r\n\r\n                <button className=\"forward\" onClick={forwardPlayer}>\r\n                    <HiFastForward/>\r\n                </button>\r\n            </div>\r\n            <div className=\"player-controls__bottom\">\r\n                <button className=\"rewind\" onClick={rewindPlayer}>\r\n                    <HiRewind/>\r\n                </button>\r\n\r\n                <button className=\"toggle-play\" onClick={togglePlay}>        \r\n                    {isPlaying ? <HiPause/> : <HiPlay/>}\r\n                </button>\r\n\r\n                <button className=\"forward\" onClick={forwardPlayer}>\r\n                    <HiFastForward/>\r\n                </button>\r\n\r\n                <button className=\"toggle-mute\" onClick={toggleMute}>\r\n                    {muted ? <FiVolumeX/> : volume > 0.5 ? <FiVolume2/> : <FiVolume1/>}\r\n                </button>\r\n\r\n                <input \r\n                    className=\"volume-range\"\r\n                    id=\"volume-range\"\r\n                    type=\"range\" \r\n                    min={0} \r\n                    max={100} \r\n                    value={volume * 100}\r\n                    onChange={setVolume}\r\n                />\r\n\r\n                <div className=\"seekbar\">\r\n                    <input\r\n                        className=\"seekbar__range\"\r\n                        type=\"range\"    \r\n                        min={0}\r\n                        max={duration}\r\n                        value={played}\r\n                        onChange={onChange}\r\n                        onMouseDown={onMouseDown}\r\n                        onMouseUp={onMouseUp}\r\n                    />\r\n                    <span className=\"seekbar__display-time\">{displayTime}</span>\r\n                </div>\r\n\r\n                <button className=\"fullscreen\" onClick={toggleFullScreen}>\r\n                    <AiOutlineFullscreen/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n};\r\n\r\nexport default forwardRef(PlayerControls);","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { MouseEventHandler } from \"react\";\r\nimport { jsx, css } from \"@emotion/react\";\r\n\r\nconst CSS = css`\r\n    width: 175px;\r\n    padding: .37em;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    > img\r\n    {\r\n        width: 100%;\r\n    }\r\n\r\n    > span\r\n    {\r\n        position: absolute;\r\n        bottom: 1em;\r\n        left: calc(50% - 20px);\r\n        color: white;\r\n        text-shadow: .1em .1em .2em gray;\r\n    }\r\n`;\r\n\r\nexport type TBookmark = {\r\n    img: string\r\n    display: string\r\n    currentTime: number\r\n}\r\n\r\ntype Props = {\r\n    display: string\r\n    seekTo: MouseEventHandler<HTMLDivElement>\r\n    img: string\r\n}\r\n\r\nconst Bookmark = ({ display, seekTo, img }: Props) => {\r\n    return <div css={CSS} className=\"bookmark\" onClick={seekTo}>\r\n        <img src={img} alt=\"\"/>\r\n        <span>{display}</span>\r\n    </div>\r\n};\r\n\r\nexport default Bookmark;","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useState, useCallback, useRef, ChangeEvent, MouseEvent } from \"react\";\r\nimport ReactPlayer, { ReactPlayerProps } from \"react-player/lazy\";\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport screenfull from \"screenfull\";\r\n\r\nimport PlayerControls from \"./PlayerControls\";\r\nimport Bookmark, { TBookmark } from \"./Bookmark\";\r\n\r\nconst CSS = css`\r\n    position: relative;\r\n`;\r\n\r\ntype State = {\r\n    playing: boolean\r\n    volume: number\r\n    muted: boolean\r\n    played: number\r\n    seeking: boolean\r\n    bookmarks: TBookmark[]\r\n}\r\n\r\ntype Props = {\r\n    title: string\r\n    url: string\r\n}\r\n\r\nlet count = 0;\r\n\r\nconst Player = ({\r\n    title,\r\n    url\r\n}: Props) => {\r\n    const [state, setState] = useState<State>({\r\n        playing: false,\r\n        volume: 0.5,\r\n        muted: false,\r\n        played: 0,\r\n        seeking: false,\r\n        bookmarks: []\r\n    });\r\n\r\n    const playerRef = useRef<ReactPlayer>(null); \r\n    const playerWrapperRef = useRef<HTMLDivElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const controlsRef = useRef<HTMLDivElement>(null);\r\n\r\n    const togglePlay = useCallback(() => {\r\n        setState(state => ({ ...state, playing: !state.playing}))\r\n    }, []);\r\n\r\n    const toggleMute = useCallback(() => {\r\n        setState(state => ({ ...state, muted: !state.muted }));\r\n    }, []);\r\n\r\n    const setVolume = useCallback(({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\r\n        setState(state => ({ ...state, volume: (+value / 100), muted: +value === 0 }));\r\n    }, []);\r\n\r\n    const onProgress = useCallback((currentState: ReactPlayerProps) => {\r\n        if (count > 3 && controlsRef.current) {\r\n            controlsRef.current.style.opacity = \"0\";\r\n            count = 0;\r\n        }\r\n\r\n        if (controlsRef.current && controlsRef.current.style.opacity === \"1\") count += 1; \r\n\r\n        if (!state.seeking) {\r\n            setState(state => ({ ...state, played: currentState.playedSeconds }))\r\n        }\r\n    }, [state.seeking]);\r\n\r\n    const onMouseDown = useCallback(() => {\r\n        setState(state => ({ ...state, seeking: true }));\r\n    }, []);\r\n\r\n    const onChange = useCallback(({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\r\n        setState(state => ({ ...state, played: +value }));\r\n    }, []); \r\n\r\n    const onMouseUp = useCallback(({ currentTarget: { value } }: MouseEvent<HTMLInputElement>) => {\r\n        if (playerRef.current) {\r\n            setState(state => ({ ...state, seeking: false }));\r\n            playerRef.current.seekTo(+value);\r\n        }\r\n    }, []);\r\n\r\n    const format = useCallback((secs: number) => {\r\n        if (isNaN(secs)) return \"00:00\";\r\n\r\n        const date = new Date(secs * 1000);\r\n        const hh = date.getUTCHours();\r\n        const mm = date.getUTCMinutes().toString().padStart(2, \"0\");\r\n        const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n\r\n        if (!hh) return `${mm}:${ss}`;\r\n        return `${hh}:${mm}:${ss}`;\r\n    }, []); \r\n\r\n    const onMouseOver = useCallback(() => {\r\n        if (controlsRef.current) {\r\n            controlsRef.current.style.opacity = \"1\";\r\n            count = 0;\r\n        }\r\n    }, []);\r\n\r\n    const rewindPlayer = useCallback(() => {\r\n        if (playerRef.current) {\r\n            playerRef.current.seekTo(playerRef.current.getCurrentTime() - 10);\r\n        }\r\n    }, []);\r\n\r\n    const forwardPlayer = useCallback(() => {\r\n        if (playerRef.current) {\r\n            playerRef.current.seekTo(playerRef.current.getCurrentTime() + 10);\r\n        }\r\n    }, []);\r\n\r\n    const toggleFullScreen = useCallback(() => {\r\n        if (screenfull.isEnabled && playerWrapperRef.current) {\r\n            screenfull.toggle(playerWrapperRef.current);\r\n        }\r\n    }, []);\r\n\r\n    \r\n    const duration = playerRef.current ? playerRef.current.getDuration() : 0;\r\n    const currentTime = playerRef.current ? playerRef.current.getCurrentTime() : 0;\r\n\r\n    const formatedDuration = format(duration);\r\n    const formatedCurrentTime = format(currentTime);\r\n\r\n    return <div className=\"player wow animate__animated animate__backInUp\" ref={playerWrapperRef} css={CSS}>\r\n        <ReactPlayer \r\n            url={url}\r\n            ref={playerRef}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            playing={state.playing}\r\n            volume={state.volume}\r\n            muted={state.muted}\r\n            onProgress={onProgress}\r\n            config={{\r\n                file: {\r\n                    attributes: {\r\n                        crossOrigin: \"anonymous\"\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n\r\n        <PlayerControls \r\n            ref={controlsRef}\r\n            togglePlay={togglePlay} \r\n            isPlaying={state.playing}\r\n            muted={state.muted}\r\n            volume={state.volume}\r\n            toggleMute={toggleMute}\r\n            setVolume={setVolume}\r\n            duration={duration}\r\n            played={state.played}\r\n            onChange={onChange}\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            displayTime={`${formatedCurrentTime}/${formatedDuration}`}\r\n            title={title}\r\n            onMouseOver={onMouseOver}\r\n            rewindPlayer={rewindPlayer}\r\n            forwardPlayer={forwardPlayer}\r\n            toggleFullScreen={toggleFullScreen}\r\n        />\r\n\r\n        <div style={{display: \"flex\", position: \"absolute\", overflow: \"hidden\", width: \"100%\"}}>\r\n            {state.bookmarks.map((mark, item) => {\r\n                return <Bookmark\r\n                    key={item}\r\n                    img={mark.img}\r\n                    display={mark.display}\r\n                    seekTo={() => playerRef.current ? playerRef.current.seekTo(mark.currentTime) : null}\r\n                />\r\n            })}\r\n        </div>\r\n\r\n        <canvas ref={canvasRef} style={{position: \"absolute\", backgroundColor: \"transparent\"}} />\r\n    </div>\r\n};\r\n\r\nexport default Player;"],"sourceRoot":""}